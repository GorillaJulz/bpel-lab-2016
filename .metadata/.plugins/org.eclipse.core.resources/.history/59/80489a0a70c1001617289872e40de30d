<!-- conductorder BPEL Process [Generated by the Eclipse BPEL Designer] -->
<!-- Date: Tue Dec 13 19:57:55 CET 2016 -->
<bpel:process name="conductorder"
         targetNamespace="julz.babis"
         suppressJoinFailure="yes"
         xmlns:tns="julz.babis"
         xmlns:bpel="http://docs.oasis-open.org/wsbpel/2.0/process/executable"
         xmlns:ns="http://iaas.uni-stuttgart.de/labs/FlowSOG">

    <!-- Import the client WSDL -->
    <bpel:import namespace="http://iaas.uni-stuttgart.de/labs/FlowSOG" location="bpmlab16.wsdl" importType="http://schemas.xmlsoap.org/wsdl/"></bpel:import>
    <bpel:import location="conductorderArtifacts.wsdl" namespace="julz.babis" 
	        importType="http://schemas.xmlsoap.org/wsdl/" />
         
    <!-- ================================================================= -->         
    <!-- PARTNERLINKS                                                      -->
    <!-- List of services participating in this BPEL process               -->
    <!-- ================================================================= -->         
    <bpel:partnerLinks>
        <!-- The 'client' role represents the requester of this service. -->
        <bpel:partnerLink name="client"
                     partnerLinkType="tns:conductorder"
                     myRole="conductorderProvider"
                     />
        <bpel:partnerLink name="InventoryServicePL" partnerLinkType="tns:InventoryServicePL" partnerRole="InventoryServicePLRole"></bpel:partnerLink>
        <bpel:partnerLink name="OrderServicePL" partnerLinkType="tns:OrderServicePL" partnerRole="OrderServicePLRole"></bpel:partnerLink>
        <bpel:partnerLink name="ShipmentServicePL" partnerLinkType="tns:ShipmentServicePL" partnerRole="ShipmentServicePLRole"></bpel:partnerLink>
        <bpel:partnerLink name="PaymentServicePL"></bpel:partnerLink>
    </bpel:partnerLinks>
  
    <!-- ================================================================= -->         
    <!-- VARIABLES                                                         -->
    <!-- List of messages and XML documents used within this BPEL process  -->
    <!-- ================================================================= -->         
    <bpel:variables>
        <!-- Reference to the message passed as input during initiation -->
        <bpel:variable name="input"
                  messageType="tns:conductorderRequestMessage"/>
                  
        <!-- 
          Reference to the message that will be returned to the requester
          -->
        <bpel:variable name="output"
                  messageType="tns:conductorderResponseMessage"/>
        <bpel:variable name="InventoryServicePLResponse" messageType="ns:checkAvailabilityOutput"></bpel:variable>
        <bpel:variable name="InventoryServicePLRequest" messageType="ns:checkAvailabilityInput"></bpel:variable>
    </bpel:variables>

    <!-- ================================================================= -->         
    <!-- ORCHESTRATION LOGIC                                               -->
    <!-- Set of activities coordinating the flow of messages across the    -->
    <!-- services integrated within this business process                  -->
    <!-- ================================================================= -->         
    <bpel:sequence name="main">
        
        <!-- Receive input from requester. 
             Note: This maps to operation defined in conductorder.wsdl 
             -->
        <bpel:receive name="receiveInput" partnerLink="client"
                 portType="tns:conductorder"
                 operation="process" variable="input"
                 createInstance="yes"/>
        
        <!-- Generate reply to synchronous request -->
        <bpel:forEach parallel="no" counterName="index" name="ForEachProduct">
            <bpel:startCounterValue><![CDATA[1]]></bpel:startCounterValue>
            <bpel:finalCounterValue><![CDATA[count($input.payload/tns:input/tns:products/tns:product)]]></bpel:finalCounterValue>
<!--             <bpel:completionCondition></bpel:completionCondition> -->
            <bpel:scope>
                <bpel:sequence name="Sequence">
                    <bpel:assign validate="no" name="AssignOrderID"><bpel:copy>
                <bpel:from><bpel:literal><FlowSOG:checkAvailability xmlns:FlowSOG="http://iaas.uni-stuttgart.de/labs/FlowSOG" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <FlowSOG:productId>FlowSOG:productId</FlowSOG:productId>
</FlowSOG:checkAvailability>
</bpel:literal></bpel:from>
                <bpel:to variable="InventoryServicePLRequest" part="checkAvailabilityInput"></bpel:to>
            </bpel:copy>
            <bpel:copy>
                <bpel:from part="payload" variable="input">
                                <bpel:query queryLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">
                                    <![CDATA[tns:input/tns:products/tns:product/tns:productID]]>
                                </bpel:query>
                            </bpel:from>
                <bpel:to part="checkAvailabilityInput" variable="InventoryServicePLRequest">
                                <bpel:query queryLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">
                                    <![CDATA[ns:productId]]>
                                </bpel:query>
                            </bpel:to>
            </bpel:copy>
        
        </bpel:assign>
                    <bpel:invoke name="checkAvailability" partnerLink="InventoryServicePL" operation="checkAvailability" portType="ns:InventoryPortType" inputVariable="InventoryServicePLRequest" outputVariable="InventoryServicePLResponse"></bpel:invoke>
                    
                    
                    
                    
                    <bpel:if name="IfProductNotAvailable">
                        <bpel:condition><![CDATA[$InventoryServicePLResponse.checkAvailabilityOutput/ns:product/ns:status/ns:currentAvailability = "not available"]]></bpel:condition>
                        <bpel:exit name="Exit"></bpel:exit>
                    </bpel:if>
                </bpel:sequence>
            </bpel:scope>
        </bpel:forEach>
        
        
        
        
        
        
        
        
        
        <bpel:assign validate="no" name="AssignOrder">
                        <bpel:copy>
                            <bpel:from><bpel:literal><tns:conductorderResponse xmlns:tns="julz.babis" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <tns:result>tns:result</tns:result>
</tns:conductorderResponse>
</bpel:literal></bpel:from>
                            <bpel:to variable="output" part="payload"></bpel:to>
                        </bpel:copy>
                        <bpel:copy>
                            <bpel:from part="checkAvailabilityOutput" variable="InventoryServicePLResponse">
                                <bpel:query queryLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0"><![CDATA[ns:product/ns:status/ns:currentAvailability]]></bpel:query>
                            </bpel:from>
                            <bpel:to part="payload" variable="output">
                                <bpel:query queryLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0"><![CDATA[tns:result]]></bpel:query>
                            </bpel:to>
                        </bpel:copy>
                    
                        
        </bpel:assign>
        <bpel:reply name="replyOutput" partnerLink="client" portType="tns:conductorder" operation="process" variable="output" />
    </bpel:sequence>
</bpel:process>

